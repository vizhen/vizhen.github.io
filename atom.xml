<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小俊的博客</title>
  
  <subtitle>重新出发</subtitle>
  <link href="http://www.haocloud.top/atom.xml" rel="self"/>
  
  <link href="http://www.haocloud.top/"/>
  <updated>2022-05-24T15:19:41.247Z</updated>
  <id>http://www.haocloud.top/</id>
  
  <author>
    <name>vizhen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>github_dns</title>
    <link href="http://www.haocloud.top/archives/e6ed7f90.html"/>
    <id>http://www.haocloud.top/archives/e6ed7f90.html</id>
    <published>2022-05-24T15:02:45.000Z</published>
    <updated>2022-05-24T15:19:41.247Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题发现"><a href="#问题发现" class="headerlink" title="问题发现"></a>问题发现</h2><p>今天部署hexo博客时候发现失败，然后ssh -T -v <span class="exturl" data-url="bWFpbHRvOiYjeDY3OyYjeDY5OyYjMTE2OyYjNjQ7JiN4Njc7JiMxMDU7JiN4NzQ7JiMxMDQ7JiMxMTc7JiN4NjI7JiN4MmU7JiM5OTsmIzExMTsmIzEwOTs=">&#x67;&#x69;&#116;&#64;&#x67;&#105;&#x74;&#104;&#117;&#x62;&#x2e;&#99;&#111;&#109;<i class="fa fa-external-link-alt"></i></span>的时候居然发现 github.com 解析到IP地址为 127.0.0.1，而我自己的hosts文件里面没有改过github的解析。 <del>（看来不知道国内DNS解析商抽啥风，屏蔽了github.com）</del></p><span id="more"></span><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>知道问题原因了，就好解决了。  </p><ol><li>查询正确的IP地址<img src="/archives/e6ed7f90/whatsmydns.me.png" class="" title="DNS查询">选择一个可以ping通，且延迟低的IP地址</li><li>修改host文件<br>Windows 系统位于 C:\Windows\System32\drivers\etc\hosts<img src="/archives/e6ed7f90/hosts.png" class="" title="hosts"></li><li>刷新DNS<br>在CMD中<code>ping github.com </code>看是否解析为我们hosts文件中的IP，如果不是可以使用<code>ipconfig /flushdns</code> 命令刷新DNS缓存</li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;问题发现&quot;&gt;&lt;a href=&quot;#问题发现&quot; class=&quot;headerlink&quot; title=&quot;问题发现&quot;&gt;&lt;/a&gt;问题发现&lt;/h2&gt;&lt;p&gt;今天部署hexo博客时候发现失败，然后ssh -T -v &lt;a href=&quot;mailto:&amp;#x67;&amp;#x69;&amp;#116;&amp;#64;&amp;#x67;&amp;#105;&amp;#x74;&amp;#104;&amp;#117;&amp;#x62;&amp;#x2e;&amp;#99;&amp;#111;&amp;#109;&quot;&gt;&amp;#x67;&amp;#x69;&amp;#116;&amp;#64;&amp;#x67;&amp;#105;&amp;#x74;&amp;#104;&amp;#117;&amp;#x62;&amp;#x2e;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;的时候居然发现 github.com 解析到IP地址为 127.0.0.1，而我自己的hosts文件里面没有改过github的解析。 &lt;del&gt;（看来不知道国内DNS解析商抽啥风，屏蔽了github.com）&lt;/del&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Blog" scheme="http://www.haocloud.top/categories/Blog/"/>
    
    
    <category term="github" scheme="http://www.haocloud.top/tags/github/"/>
    
    <category term="DNS" scheme="http://www.haocloud.top/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>Android解决avc denied问题方法</title>
    <link href="http://www.haocloud.top/archives/272a02c7.html"/>
    <id>http://www.haocloud.top/archives/272a02c7.html</id>
    <published>2022-05-24T13:50:31.000Z</published>
    <updated>2022-05-24T14:53:59.875Z</updated>
    
    <content type="html"><![CDATA[<p> Android SELinux 有三种工作模式:</p><ul><li>enforcing: 强制模式, 执行SELinux规则, 违反的行为会被阻止</li><li>permissive: 宽容模式, 执行SELinux规则, 违反的行不会被阻止</li><li>disabled: 关闭SELinux<br>工作在强制模式的时候，违反SELinux规则的操作，则无法进行，在Log中会出现很多“avc denied”的Log信息,本文介绍一种快速解决avc denied 的方法。<span id="more"></span></li></ul><h2 id="使用policycoreutils-工具"><a href="#使用policycoreutils-工具" class="headerlink" title="使用policycoreutils 工具"></a>使用policycoreutils 工具</h2><p>Ubuntu系统安装policycoreutils工具<br><code>$sudo apt-get install policycoreutils</code></p><h2 id="导出log信息"><a href="#导出log信息" class="headerlink" title="导出log信息"></a>导出log信息</h2><p>将Android平台中avc denied的Log全部导出来<br><code>dmesg | grep avc  &gt; /sdcard/avc.txt </code></p><h2 id="audit2allow自动生成规则"><a href="#audit2allow自动生成规则" class="headerlink" title="audit2allow自动生成规则"></a>audit2allow自动生成规则</h2><p>把导出来的avc.txt 用audit2allow命令自动生成规则配置<br><code> audit2allow -i avc.txt</code><br>如下，是我碰到的一个情况  </p><blockquote><p>#&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; system_app &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>allow system_app default_prop:property_service set;<br>allow system_app i2c_device:chr_file open;<br>allow system_app serial_device:chr_file { read write };  </p></blockquote><h2 id="添加相应-te文件规则"><a href="#添加相应-te文件规则" class="headerlink" title="添加相应.te文件规则"></a>添加相应.te文件规则</h2><p>根据上面自动生成的信息，添加到对应的.te文件中。如上面我们就需要添加在 system_app.te 文件中。  </p><h2 id="出现neverallow错误"><a href="#出现neverallow错误" class="headerlink" title="出现neverallow错误"></a>出现neverallow错误</h2><p>我们在.te 文件添加行为，可能会违反系统一些规则，当我们编译的时候就会出现冲突。比如下面：  </p><blockquote><p>out&#x2F;target&#x2F;product&#x2F;marconi&#x2F;obj&#x2F;ETC&#x2F;sepolicy.recovery_intermediates&#x2F;sepolicy.permissivedomains 1&gt;&amp;2;         exit 1; fi ) &amp;&amp; (mv out&#x2F;target&#x2F;product&#x2F;marconi&#x2F;obj&#x2F;ETC&#x2F;sepolicy.recovery_intermediates&#x2F;sepolicy.tmp out&#x2F;target&#x2F;product&#x2F;marconi&#x2F;obj&#x2F;ETC&#x2F;sepolicy.recovery_intermediates&#x2F;sepolicy )”<br>libsepol.report_failure: neverallow on line 532 of system&#x2F;sepolicy&#x2F;public&#x2F;dnsmasq.te (or line 10498 of policy.conf) violated by allow system_app default_prop:property_service { set };<br>libsepol.check_assertions: 1 neverallow failures occurred<br>Error while expanding policy<br>out&#x2F;host&#x2F;linux-x86&#x2F;bin&#x2F;checkpo  </p></blockquote><p>一个简单解决方法：找到冲突的地方，屏蔽或者过滤掉。 如上面的错误，我分析发现是domain.te 不允许设置default_prop  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Require that domains explicitly label unknown properties, and do not allow</span><br><span class="line"># anyone but init to modify unknown properties.</span><br><span class="line"></span><br><span class="line">neverallow &#123; domain -init -vendor_init &#125; default_prop:property_service set;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">compatible_property_only(`</span><br><span class="line">   neverallow &#123; domain -init &#125; default_prop:property_service set;</span><br><span class="line">   neverallow &#123; domain -init &#125; mmc_prop:property_service set;</span><br><span class="line">   neverallow &#123; domain -init -vendor_init &#125; exported_default_prop:property_service set;neverallow &#123; domain -init &#125; exported_secure_prop:property_service set;</span><br></pre></td></tr></table></figure><p>我们添加 -system_app ，意思neverallow这条规则中对 system_app 不起作用   </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">--- public/domain.te    (revision 830)</span><br><span class="line">+++ public/domain.te    (working copy)</span><br><span class="line">@@ -529,11 +529,11 @@</span><br><span class="line"> </span><br><span class="line"> # Require that domains explicitly label unknown properties, and do not allow</span><br><span class="line"> # anyone but init to modify unknown properties.</span><br><span class="line">-neverallow &#123; domain -init -vendor_init &#125; default_prop:property_service set;</span><br><span class="line">+neverallow &#123; domain -init -vendor_init -system_app &#125; default_prop:property_service set;</span><br><span class="line"> neverallow &#123; domain -init -vendor_init &#125; mmc_prop:property_service set;</span><br><span class="line"> </span><br><span class="line"> compatible_property_only(`</span><br><span class="line">-    neverallow &#123; domain -init &#125; default_prop:property_service set;</span><br><span class="line">+    neverallow &#123; domain -init -system_app &#125; default_prop:property_service set;</span><br><span class="line">     neverallow &#123; domain -init &#125; mmc_prop:property_service set;</span><br><span class="line">     neverallow &#123; domain -init -vendor_init &#125; exported_default_prop:property_service set;</span><br><span class="line">     neverallow &#123; domain -init &#125; exported_secure_prop:property_service set;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在system&#x2F;sepolicy 下面mm 编译测试就能通过了。这样的解决方式会有一个弊端，就是造成无法通过CTS 测试，所以只能自己取舍咯。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt; Android SELinux 有三种工作模式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;enforcing: 强制模式, 执行SELinux规则, 违反的行为会被阻止&lt;/li&gt;
&lt;li&gt;permissive: 宽容模式, 执行SELinux规则, 违反的行不会被阻止&lt;/li&gt;
&lt;li&gt;disabled: 关闭SELinux&lt;br&gt;工作在强制模式的时候，违反SELinux规则的操作，则无法进行，在Log中会出现很多“avc denied”的Log信息,本文介绍一种快速解决avc denied 的方法。</summary>
    
    
    
    <category term="Android" scheme="http://www.haocloud.top/categories/Android/"/>
    
    
    <category term="Android" scheme="http://www.haocloud.top/tags/Android/"/>
    
    <category term="SeLinux" scheme="http://www.haocloud.top/tags/SeLinux/"/>
    
  </entry>
  
  <entry>
    <title>我的hexo的配置</title>
    <link href="http://www.haocloud.top/archives/cdec4cbd.html"/>
    <id>http://www.haocloud.top/archives/cdec4cbd.html</id>
    <published>2022-05-15T02:22:33.000Z</published>
    <updated>2022-05-15T05:19:45.861Z</updated>
    
    <content type="html"><![CDATA[<h2 id="首页只显示摘要"><a href="#首页只显示摘要" class="headerlink" title="首页只显示摘要"></a>首页只显示摘要</h2><ol><li><p>修改配置<br>NEXT主题里面_config.yml 中把设置打开（默认是开的）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Automatically excerpt description in homepage as preamble text.</span><br><span class="line">excerpt_description: true</span><br></pre></td></tr></table></figure></li><li><p>可以用写概述方法<br>在文章的front-matter中添加description，其中description中的内容就会被显示在首页上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">categories: Blog</span><br><span class="line">abbrlink: 4a17b156</span><br><span class="line">description: 建站自述</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li><p>懒人使用 <code>&lt;!-- more --&gt;</code><br>在文章需要截断的地方加入 <code>&lt;!-- more--&gt;</code> 即可，这样前面的就会成为首页摘要</p></li></ol><h2 id="博客中插入图片"><a href="#博客中插入图片" class="headerlink" title="博客中插入图片"></a>博客中插入图片</h2><ol><li>安装插件<br>使用命令 <code>npm install hexo-renderer-marked</code>安装插件，再安装 <code>npm install hexo-image-link --save</code>  </li><li>修改配置<br>hexo的_config.yml 中配置：<br><code>post_asset_folder: true</code><br>当使用<code>hexo new </code>创建文章的时候，会生成相同文件夹，我们把图片放到这个文件夹里面，然后用Markdown语法<code>![]()</code>插入图片即可</li></ol><h2 id="RSS功能支持"><a href="#RSS功能支持" class="headerlink" title="RSS功能支持"></a>RSS功能支持</h2><ol><li><p>安装RSS插件<br>使用命令安装生成RSS Feed插件：<code>$npm install hexo-generator-feed --save</code></p></li><li><p>修改主题配置文件<br>我的主题是next，在hexo\themes\hexo-theme-next_config.yml 的Sidebar Settings部分增加以下代码：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sidebar_rss:</span><br><span class="line">    text: RSS</span><br><span class="line">    icon: fa fa-rss</span><br><span class="line">    color: burlywood</span><br><span class="line">    link: atom.xml</span><br></pre></td></tr></table></figure><p>如图中位置： </p><img src="/archives/cdec4cbd/hexo_rss_1.jpg" class="" title="主题修改"></li><li><p>修改边栏模板<br>编辑themes&#x2F;hexo-theme-next&#x2F;layout&#x2F;_partials&#x2F;sidebar&#x2F;site-overview.swig 文件，在适当的位置插入以下代码，这样便在侧边栏增加了一个用于 RSS 订阅的链接。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;%- if theme.sidebar_rss %&#125;</span><br><span class="line">  &lt;div class=&quot;&quot;&gt;</span><br><span class="line">    &lt;a target=&quot;_blank&quot; class=&quot;social-link&quot; href=&quot;&#123;&#123; url_for(theme.sidebar_rss.link) &#125;&#125;&quot; style=&quot;color: &#123;&#123; theme.sidebar_rss.color &#125;&#125;;&quot;&gt;</span><br><span class="line">      &lt;span class=&quot;icon&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;&#123;&#123; theme.sidebar_rss.icon &#125;&#125;&quot;&gt;&lt;/i&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">      &lt;span class=&quot;label&quot;&gt;&#123;&#123; theme.sidebar_rss.text &#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure><p>如图中位置：  </p><img src="/archives/cdec4cbd/hexo_rss_2.jpg" class="" title="模板位置"></li><li><p>查看效果<br>运行命令查看效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$hexo g</span><br><span class="line">$hexo s</span><br></pre></td></tr></table></figure></li></ol><h2 id="博客增加分类"><a href="#博客增加分类" class="headerlink" title="博客增加分类"></a>博客增加分类</h2><ol><li><p>创建分类页面<br>执行命令<code>$ hexo new page categories</code> ,在source&#x2F;categories文件夹下会有index.md这个文件,打开后添加<code>type: &quot;categories&quot;</code>到内容中即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2022-05-01 09:21:18</span><br><span class="line">type: categories</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li><p>创建博客分类模板<br>通过<code>hexo new </code> 创建博客的时候，默认使用 scaffolds&#x2F;post.md，直接修改它,增加一个<code>categories:</code>即可 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">记录我的hexo的配置，显示摘要设置，rss设置，分类模板设置等。</summary>
    
    
    
    <category term="Blog" scheme="http://www.haocloud.top/categories/Blog/"/>
    
    
    <category term="hexo" scheme="http://www.haocloud.top/tags/hexo/"/>
    
    <category term="hexo-next-theme" scheme="http://www.haocloud.top/tags/hexo-next-theme/"/>
    
  </entry>
  
  <entry>
    <title>声音基础知识</title>
    <link href="http://www.haocloud.top/archives/68ea15fc.html"/>
    <id>http://www.haocloud.top/archives/68ea15fc.html</id>
    <published>2022-05-09T13:42:54.000Z</published>
    <updated>2022-05-15T03:23:22.589Z</updated>
    
    <content type="html"><![CDATA[<h2 id="声音是什么"><a href="#声音是什么" class="headerlink" title="声音是什么"></a>声音是什么</h2><p>首先我们来回答一个问题：声音是什么？  </p><span id="more"></span><p>这还用问啊，我们用我们自己耳朵听到的东西就是声音啊。我们看看百度百科是怎么解释声音的</p><blockquote><p>声音（sound)是由物体振动产生的声波。是通过介质（空气或固体、液体）传播并能被人或动物听觉器官所感知的波动现象。最初发出振动（震动）的物体叫声源。声音以波的形式振动（震动）传播。声音是声波通过任何介质传播形成的运动。<br>声音是一种波。可以被人耳识别的声（频率在20 Hz~20000 Hz之间），我们称之为声音.  </p></blockquote><p>简单说就是，人耳朵识别到物体振动产生的声波。这里面我们看出来了声音几个关键因素：振动，传播介质，人耳识别。</p><h2 id="录音"><a href="#录音" class="headerlink" title="录音"></a>录音</h2><p>录音也就是说我们把声音怎么保存下来。我们看看留声机是怎么录音的</p><blockquote><p>留声机诞生于1877年。托马斯·阿尔瓦·爱迪生根据电话传话器里的膜板随着说话声会引起震动的现象，拿短针作了试验，从中得到很大的启发。说话的快慢高低能使短针产生相应的不同颤动 。那么，反过来，这种颤动也一定能发出原先的说话声音。</p></blockquote><p>简单的说，探针感受声音产生震动，探针将震动刻录在介质上面，当播放的时候，让探针摩擦介质，还原震动而产生声波，声音就播放出来了。</p><p>随着时代的发展，录音技术更加进步，在计算机时代中，我们麦克风接受外界声音的震动，由于法拉第电磁感应效应，实现了震动转换成电信号，将采集到电压值进行一定格式的编码(PCM)记录在计算机中存储为原始音频文件。播放则按照存储的格式从新将数据取出，转换成数字信号传递给喇叭进行播放。</p><h2 id="采样"><a href="#采样" class="headerlink" title="采样"></a>采样</h2><p>声波是一种机械波，因此也有波长和振幅的特征，波长对应于时间轴线，振幅对应于采样值轴线。波是无限光滑的，弦线可以看成由无数点组成，采样的过程就是抽取某点的采样值，很显然，在单位时间中内抽取的点越多，那么还原声音就越准确。   </p><ul><li>采样率：每秒需要采集多少个点的数据。常用录音16khz频率就是每秒采集声音数据16 000个。</li><li>采用精度：每个点数据用几位(bit)来存储。常用录音16bit。</li><li>采样通道：根据不同录音位置采集到数据就是一个通道，通道越多，我们还原出来的声音也就越精确。我们常说的立体声，也就是模拟人耳采集到左声道和有声道的两个通道的数据。</li></ul><p>常见录音为什么是16k&#x2F;16bit?  </p><blockquote><p>16k采样频率: 实际的情况下，采集频率往往比信号的实际频率要高出5到10倍以上。因为采集频率仅仅高于信号频率的2倍(乃奎斯特定律)的情况下，是很难获取测量的精度的。 而人的发音频率集中在80HZ~1200HZ,所以16KHZ采样频率能够尽量减少失真的情况采集到人的声音信号。</p></blockquote><blockquote><p>16bit采样位数: 2^16&#x3D;65536,20log(65536)约等于96dB的动态范围,足够覆盖一般场景,比如覆盖安静的夜晚(30dB)到球磨机工作(约120dB)。</p></blockquote><p>播放的音频为什么是44.1k  </p><blockquote><p>44.1k播放音频: 因为人耳的听觉范围大概在20Hz～20kHz，如果想还原20khz的音频采样频率至少要40khz ,但是梳状滤波器不可能是完美的，截止频率不能完全截断，所以需要将通带适当放开，增加一个大概10%衰减缓冲的带宽，所以就需要44k的播放音频，具体为什么是44.1k，这个就和播放的格式和数据的编码传输有关。</p></blockquote><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1] <span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlQTMlQjAlRTklOUYlQjMvMzM2ODY=">声音<i class="fa fa-external-link-alt"></i></span><br>[2] <span class="exturl" data-url="aHR0cHM6Ly9pb3Qtc3ouYWlzcGVlY2guY29tL2RvYy9jaWNhZGEtZG9jLyMvU2NpZW5jZUFydGljbGVzLw==">认识声音<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;声音是什么&quot;&gt;&lt;a href=&quot;#声音是什么&quot; class=&quot;headerlink&quot; title=&quot;声音是什么&quot;&gt;&lt;/a&gt;声音是什么&lt;/h2&gt;&lt;p&gt;首先我们来回答一个问题：声音是什么？  &lt;/p&gt;</summary>
    
    
    
    <category term="编程技术" scheme="http://www.haocloud.top/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="计算机基础" scheme="http://www.haocloud.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.haocloud.top/archives/4a17b156.html"/>
    <id>http://www.haocloud.top/archives/4a17b156.html</id>
    <published>2022-04-30T14:28:37.741Z</published>
    <updated>2022-05-15T02:18:01.821Z</updated>
    
    <content type="html"><![CDATA[<p>很早之前就开始过用Hexo + GitPages 建立博客，但是一直懒得写博客，今天趁着假期开始，每周写点东西，整理笔记也好，写点感悟也好，我，这次要重新出发！</p>]]></content>
    
    
    <summary type="html">建站自述</summary>
    
    
    
    <category term="Blog" scheme="http://www.haocloud.top/categories/Blog/"/>
    
    
  </entry>
  
</feed>
